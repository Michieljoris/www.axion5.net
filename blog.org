* make this my blog
* setup 
- edit in emacs org mode (with code samples)
- either save to local blog installation, or to server on net
regardless, the www dir needs to git pushed to gitio pages
https://github.com/Michieljoris/michieljoris.github.io
- Best to set button on dynamic blog to push to michieljoris.github.io
- Best have blog running on server, not local, so you can edit anywhere and then
  push to github, but too much hassle. Because you would have multiple sources
  of blog articles that need to be synced then. Also emacs you can't use on 
- rsync to publish to server?
- use emacs to edit html textbox? in browser? no, probably not
- markdown?? code highlighting??
- how about editing online? Because that has to be transformed back into org!
  Not possible!!! 
  

* TODO
** remove hexo-blog from github

* good to know
** node org-parser and renderer  
  https://github.com/daitangio/org-mode-parser
  https://github.com/whacked/org-mode-parser/tree/client-side-rendering
  https://github.com/whacked/org-mode-parser/tree/client-side-rendering
**  pandoc
  http://johnmacfarlane.net/pandoc/
If you need to convert files from one markup format into another, pandoc is your
swiss-army knife.

https://github.com/daviferreira/medium-editor
http://epiceditor.com/
  
* bugs

* persona:
Add this script or download and include -that-
<script src="https://login.persona.org/include.js"></script>
Include persona-buttons.css
Include cookie.js
Include persona.js with the initPersona function
Call it before the app starts.
Add these functions to a controller:

    $scope.signout = function($event) {
	$event.preventDefault();
	console.log('Logging out');
	navigator.id.logout();

    };

    $scope.signin = function($event) {
	$event.preventDefault();
	console.log('Logging in');
	navigator.id.request();
    };

Have this html snippet in the controller's scope somewhere:    
     <div ng-show="true">
       <a ng-hide="signedIn" href="#" class="persona-button blue" ng-click="signin($event)"><span>Sign in</span></a>
       <a ng-show="signedIn" href="#" class="persona-button blue" ng-click="signout($event)"><span>Sign out</span></a>
     </div>

Add this to the server configuration to turn sessions on: 
    ,sessions: {
	expires: 30*24*60*60  //one month
    }
Add the right emails to authorized_emails.js
exports.list =  
    [
	'michieljoris@gmail.com'
    ];

Add this to server.js
,signin = require("./signin.js")
,signout = require("./signout.js")
Add this to the post handlers
	,"/signin": signin
	,"/signout": signout
After successfull signin $scope.signedIn is the user's email address	







* epiceditor init

//node module
// var opts = {
//   container: 'epiceditor',
//   textarea: null,
//   basePath: 'epiceditor',
//   clientSideStorage: true,
//   localStorageName: 'epiceditor',
//   useNativeFullscreen: true,
//   parser: marked,
//   file: {
//     name: 'epiceditor',
//     defaultContent: '',
//     autoSave: 100
//   },
//   theme: {
//     base: '/themes/base/epiceditor.css',
//     preview: '/themes/preview/preview-dark.css',
//     editor: '/themes/editor/epic-dark.css'
//   },
//   button: {
//     preview: true,
//     fullscreen: true,
//     bar: "auto"
//   },
//   focusOnLoad: false,
//   shortcut: {
//     modifier: 18,
//     fullscreen: 70,
//     preview: 80
//   },
//   string: {
//     togglePreview: 'Toggle Preview Mode',
//     toggleEdit: 'Toggle Edit Mode',
//     toggleFullscreen: 'Enter Fullscreen'
//   },
//   autogrow: true
// }
// var epicEditor = new EpicEditor(opts);

// epicEditor.load()
